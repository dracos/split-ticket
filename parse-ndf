#!/usr/bin/env python

from datetime import date
import json
import sys

from split.parse import unpack, cnv_full_date, loop

ticket_types = (
    'SOS', 'SOR', # Anytime single/return
    'SDS', 'SDR', # Anytime day
    'GTS', 'GTR', # Anytime single/return
    'GPR', # Anytime day return

    'CDS', 'CDR', # Off-peak day
    'SVS', 'SVR', 'SVH', # Off-peak
    'G2S', 'G2R', # Offpeak

    'SSS', 'SSR', 'OPS', 'OPR', # Super off-peak single/return
    'CBB', # Super off-peak single
    'SOP', # Super off-peak return
    # Super off-peak day
    'GDS', 'GDR', 'PDS', 'PDR',
    'SOA', 'SOB',
    'AM1', 'AM2',
    'EGS', 'EGF',
    'OPD',
    'SRR', 'SWS', 'SCO', 'C1R', 'CBA',
)

lookups = (
    ('from', 4), ('to', 4), ('route', 5), ('railcard', 3), ('ticket', 3), ('type', 1), ('end_date', 8, cnv_full_date), ('start_date', 8, cnv_full_date), ('quote_date', 8, cnv_full_date), ('suppress', 1), ('adult', 8), ('child', 8), ('restriction', 2), ('composite', 1), ('cross-london', 1), ('private-settlement', 1)
)

def parse_file(file, type):
    for row in loop(file):
        row = unpack(row, *lookup)
        assert row['type'] == type
        if row['railcard'].strip(): continue
        if row['end_date'] < date.today(): continue
        if row['start_date'] > date.today(): continue
        if row['ticket'] not in ticket_types: continue
        if row['composite'] == 'N': continue
        del row['railcard'], row['end_date'], row['quote_date'], row['start_date'], row['composite'], row['child'], row['cross-london'], row['private-settlement'], row['type']
        key = '%(from)s-%(to)s-%(route)s-%(ticket)s' % row
        yield key, row

# ---

data = {}
for key, row in parse_file('fare-data-273/RJFAF207.NDF', 'N'):
    assert row['suppress'] == 'N'
    del row['suppress']
    data[key] = row

print >>sys.stderr, "%d rows from NDF file" % len(data)

removed = 0
for key, row in parse_file('fare-data-273/RJFAF273.NFO', 'O'):
    if row['suppress'] == 'Y':
        assert key in data
        del data[key]
        removed += 1
    else:
        assert row['suppress'] == 'N'
        del row['suppress']
        data[key] = row

print >>sys.stderr, "%d rows after NFO file, %d removed" % (len(data), removed)

print json.dumps(data, separators=(',', ': '), indent=2, sort_keys=True)
